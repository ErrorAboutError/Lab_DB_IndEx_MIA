<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value ="DarkGray"  />
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="44"/>
        <!--64-->
        <Setter Property="Width" Value="200"/>
        <!--248-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="{x:Type Button}" x:Key="buttonStyle2">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value ="DarkRed"  />
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="44"/>
        <!--64-->
        <Setter Property="Width" Value="200"/>
        <!--248-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="buttonStyle4">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value ="#000000"  />
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="44"/>
        <!--64-->
        <Setter Property="Width" Value="200"/>
        <!--248-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="10"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="buttonStyle3">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Background" Value = "#9E0016"  />
        <Setter Property="Foreground" Value="GhostWhite"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Height" Value="44"/>
        <!--64-->
        <Setter Property="Width" Value="500"/>
        <!--248-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="0 15 0 15"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter  Content="{TemplateBinding Content}"
                                           HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  
                                           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DarkCyan"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <!--TEXTBOX STYLE-->
    <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value ="#0A0A0A"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="BorderBrush" Value="#FF2D333D"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <TextBox Text="{Binding Path=Text,
                                                RelativeSource={RelativeSource TemplatedParent},
                                                Mode=TwoWay,
                                                UpdateSourceTrigger=PropertyChanged}"
                                 x:Name="textSource"
                                 Foreground= "GhostWhite"
                                 FontSize="15"
                                 BorderBrush="DarkRed"
                                 BorderThickness="2"
                                 Background="Transparent"
                                 Panel.ZIndex="2" />
                        <TextBox Text="{TemplateBinding Tag}" Background="{TemplateBinding Background}" Panel.ZIndex="1">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Foreground" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                                            <Setter Property="Foreground" Value="Gray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

</ResourceDictionary>